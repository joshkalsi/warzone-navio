---
import { type CollectionEntry, getCollection } from "astro:content";
import Battles from "@layouts/Battles.astro";
import BattleDetails from "@layouts/BattleDetails.astro";
import getSortedPosts from "@utils/getSortedPosts";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
    post: CollectionEntry<"battles">;
}

export async function getStaticPaths() {
    const posts = await getCollection("battles", ({ data }) => !data.draft);

    const postResult = posts.map(post => ({
        params: { slug: post.slug },
        props: { post },
    }));

    const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
        params: { slug: String(pageNum) },
    }));

    return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("battles");

const sortedPosts = getSortedPosts(posts);

const pagination = getPagination({
    posts: sortedPosts,
    page: slug,
});
---

{post ? <BattleDetails post={post} /> : <Battles {...pagination} />}
